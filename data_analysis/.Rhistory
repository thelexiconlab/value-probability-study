group_by(guess1) %>%
count()
x_2 = x %>%
group_by(guess2) %>%
count()
x_1
x_2
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word) %>%
count()
x_1 = x %>%
group_by(guess1) %>%
count()
x_2 = x %>%
group_by(guess2) %>%
count()
x_1
x_2
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word) %>%
sum()
x_1 = x %>%
group_by(guess1) %>%
count()
x_2 = x %>%
group_by(guess2) %>%
count()
x_1
x_2
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word) %>%
sum(n)
x_1 = x %>%
group_by(guess1) %>%
count()
x_2 = x %>%
group_by(guess2) %>%
count()
x_1
x_2
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word)
x_1 = x %>%
group_by(guess1) %>%
count()
x_2 = x %>%
group_by(guess2) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
guessed_words = guessed_words %>%
aggregate(guessed_words$n, by=list(Category=guessed_words$words), FUN=sum)
x_1 = x %>%
group_by(guess1) %>%
count()
x_2 = x %>%
group_by(guess2) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word) %>%
summarise(n = sum(n))
View(x_1)
View(x_2)
x_1 = x %>%
group_by(guess1) %>%
count()
x_2 = x %>%
group_by(guess2) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word) %>%
summarise(n = sum(n))
n_subjects = nrows(trials %>%
group_by(subject) %>%
count())
x_1 = x %>%
group_by(guess1) %>%
count()
x_2 = x %>%
group_by(guess2) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word) %>%
summarise(n = sum(n))
n_subjects = nrows(trials %>%
group_by(subject) %>%
count())
x_1 = x %>%
group_by(guess1) %>%
count()
x_2 = x %>%
group_by(guess2) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word) %>%
summarise(n = sum(n))
n_subjects = nrow(trials %>%
group_by(subject) %>%
count())
guessed_words = guessed_words %>%
mutate(probability = n/n_subjects)
guess_accessibility = read_csv("guess_visit_counts.csv")
View(guess_accessibility)
x_1 = x %>%
group_by(guess1, clue) %>%
count()
x_2 = x %>%
group_by(guess2,clue) %>%
count()
x_1
x_2
x_1 = x %>%
group_by(guess1, clue) %>%
count()
x_2 = x %>%
group_by(guess2,clue) %>%
count()
guessed_words = bind_rows(x_1, x_2)
x_1
x_2
guessed_words
x_1 = x %>%
group_by(guess1, clue) %>%
count()
x_2 = x %>%
group_by(guess2,clue) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word) %>%
summarise(n = sum(n))
x_1 = x %>%
group_by(guess1, clue) %>%
count()
x_2 = x %>%
group_by(guess2,clue) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word, clue) %>%
summarise(n = sum(n))
x_1 = x %>%
group_by(guess1, clue) %>%
count()
x_2 = x %>%
group_by(guess2,clue) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word, clue) %>%
summarise(n = sum(n), .groups = clue)
x_1 = x %>%
group_by(guess1, clue) %>%
count()
x_2 = x %>%
group_by(guess2,clue) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word) %>%
summarise(n = sum(n), .groups = clue)
x_1 = x %>%
group_by(guess1, clue) %>%
count()
x_2 = x %>%
group_by(guess2,clue) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word, clue)
x_1 = x %>%
group_by(guess1, clue) %>%
count()
x_2 = x %>%
group_by(guess2,clue) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word, clue) %>%
count()
x_1 = x %>%
group_by(guess1, clue) %>%
count()
x_2 = x %>%
group_by(guess2,clue) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word, clue) %>%
summarise(n = sum(n))
y = trials %>%
group_by(subject, clue) %>%
count()
y
guessed_words = guessed_words %>%
mutate(probability = n/n_subjects)
y = trials %>%
group_by(clue, subject) %>%
summarise(n = sum(n))
y = trials %>%
group_by(clue) %>%
count()
y
y = trials %>%
group_by(clue) %>%
count()
guessed_words = guessed_words %>%
mutate(probability = n/y$n[clue])
View(y)
y = trials %>%
group_by(clue) %>%
count()
guessed_words = guessed_words %>%
mutate(probability = n/y$n[clue])
y$n[ability]
y = trials %>%
group_by(clue) %>%
count()
guessed_words = guessed_words %>%
mutate(probability = n/y$n[clue])
y$n["ability"]
y = trials %>%
group_by(clue) %>%
count()
guessed_words = guessed_words %>%
mutate(probability = n/y$n[clue])
y$n[1]
y = trials %>%
group_by(clue) %>%
count()
guessed_words = guessed_words %>%
mutate(probability = n/y$n[clue])
y$n$ability
y = trials %>%
group_by(clue) %>%
count()
guessed_words = guessed_words %>%
mutate(probability = n/y$n[clue])
y$n.ability
y = trials %>%
group_by(clue) %>%
count()
guessed_words = guessed_words %>%
mutate(probability = n/y$n[clue])
y$n."ability"
y = trials %>%
group_by(clue) %>%
count()
guessed_words = guessed_words %>%
mutate(probability = n/y$n[clue])
y$n.1
y$n
y$clue
match(ability, y$clue)
match("ability", y$clue)
y = trials %>%
group_by(clue) %>%
count()
guessed_words = guessed_words %>%
mutate(probability = n/y$n[match(clue, y$clue)])
guess_acc = guess_accessibility %>%
filter(budget == 32)
View(guess_acc)
match("calculate", guess_acc$clue)
which("calculate", guess_acc$clue)
which("calculate", arr_ind = TRUE)
guess_acc = guess_accessibility %>%
filter(budget == 32)
match("calculate", guess_acc$clue)
which(guess_acc$clue == "calculate", arr_ind = TRUE)
which(guess_acc$clue == "calculate")
which(guess_acc$word == "abacus")
which(guess_acc$clue == "calculate")
which(guess_acc$word == "abacus")
match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus"))
which(guess_acc$clue == "calculate")
which(guess_acc$word == "abacus")
match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus"))
which(!(is.na(match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus")))))
match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus"))[which(!(is.na(match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus")))))]
which(guess_acc$word == "abacus")[match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus"))[which(!(is.na(match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus")))))]]
guess_acc = guess_accessibility %>%
filter(budget == 32)
guessed_words = guessed_words %>%
mutate(accessibility = guess_acc$visit_count[which(guess_acc$word == "abacus")[match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus"))[which(!(is.na(match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus")))))]]])
guess_accessibility = read_csv("guess_visit_counts.csv")
guess_acc = guess_accessibility %>%
filter(budget == 32)
guessed_words = guessed_words %>%
mutate(accessibility = guess_acc$visit_count[which(guess_acc$word == "abacus")[match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus"))[which(!(is.na(match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus")))))]]])
guess_acc = guess_accessibility %>%
filter(budget == 32)
guessed_words = guessed_words %>%
mutate(accessibility = guess_acc$visit_count[which(guess_acc$word == word)[match(which(guess_acc$clue == clue), which(guess_acc$word == word))[which(!(is.na(match(which(guess_acc$clue == clue), which(guess_acc$word == word)))))]]])
guess_accessibility = read_csv("guess_visit_counts.csv")
guess_acc = guess_accessibility %>%
filter(budget == 32)
guessed_words = guessed_words %>%
mutate(accessibility = guess_acc$visit_count[which(guess_acc$word == word)[match(which(guess_acc$clue == clue), which(guess_acc$word == word))[which(!(is.na(match(which(guess_acc$clue == clue), which(guess_acc$word == word)))))]]])
guess_acc = guess_accessibility %>%
filter(budget == 32)
guessed_words = guessed_words %>%
mutate(accessibility = which(guess_acc$word == word)[match(which(guess_acc$clue == clue), which(guess_acc$word == word))[which(!(is.na(match(which(guess_acc$clue == clue), which(guess_acc$word == word)))))]])
which(guess_acc$word == "accounting")[match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "accounting"))[which(!(is.na(match(which(guess_acc$clue == "calculate"), which(guess_acc$word == "accounting")))))]]
which(guess_acc$word == "accounting")[match(which(guess_acc$clue == "multiplication"), which(guess_acc$word == "accounting"))[which(!(is.na(match(which(guess_acc$clue == "multiplication"), which(guess_acc$word == "accounting")))))]]
which(guess_acc$word == "accounting")[match(which(guess_acc$clue == "hard"), which(guess_acc$word == "accounting"))[which(!(is.na(match(which(guess_acc$clue == "hard"), which(guess_acc$word == "accounting")))))]]
which(guess_acc$word == "accounting")[match(which(guess_acc$clue == "negative"), which(guess_acc$word == "accounting"))[which(!(is.na(match(which(guess_acc$clue == "negative"), which(guess_acc$word == "accounting")))))]]
guessed_words = guessed_words %>%
mutate(accessibility = which(guess_acc$word == word)[match(which(guess_acc$clue == clue), which(guess_acc$word == word))[which(!(is.na(match(which(guess_acc$clue == clue), which(guess_acc$word == word)))))]])
intersect(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus"))
guess_acc = guess_accessibility %>%
filter(budget == 32)
guessed_words = guessed_words %>%
mutate(accessibility = intersect(which(guess_acc$clue == "calculate"), which(guess_acc$word == "abacus")))
guess_acc = guess_accessibility %>%
filter(budget == 32)
guessed_words = guessed_words %>%
mutate(accessibility = intersect(which(guess_acc$clue == clue), which(guess_acc$word == word)))
intersect(which(guess_acc$clue == "calculate"), which(guess_acc$word == "accounting"))
intersect(which(guess_acc$clue == "negative"), which(guess_acc$word == "accounting"))
intersect(which(guess_acc$clue == "hard"), which(guess_acc$word == "accounting"))
intersect(which(guess_acc$clue == "multiplication"), which(guess_acc$word == "accounting"))
guess_acc = guess_accessibility %>%
filter(budget == 32) %>%
filter(!(word == "accounting"))
guessed_words = guessed_words %>%
mutate(accessibility = intersect(which(guess_acc$clue == clue), which(guess_acc$word == word)))
guess_acc = guess_accessibility %>%
filter(budget == 32) %>%
guessed_words = guessed_words %>%
mutate(accessibility = intersect(which(guess_acc$clue == clue), which(guess_acc$word == word)))
intersect(which(guess_acc$clue == "multiplication"), which(guess_acc$word == "accounting"))
intersect(which(guess_acc$clue == "multiplication"), which(guess_acc$word == "accounting"))
guess_acc = guess_accessibility %>%
filter(budget == 32)
intersect(which(guess_acc$clue == "multiplication"), which(guess_acc$word == "accounting"))
guess_acc = guess_accessibility %>%
filter(budget == 32)
guessed_words = guessed_words %>%
mutate(accessibility = intersect(which(guess_acc$clue == clue), which(guess_acc$word == word)))
intersect(which(guess_acc$clue == "multiplication"), which(guess_acc$word == "accounting"))
size_sum(intersect(which(guess_acc$clue == "multiplication"), which(guess_acc$word == "accounting")))
guess_acc = guess_accessibility %>%
filter(budget == 32)
guessed_words = guessed_words %>%
mutate(number = intersect(which(guess_acc$clue == clue), which(guess_acc$word == word)))
length(intersect(which(guess_acc$clue == "multiplication"), which(guess_acc$word == "accounting")))
guess_acc = guess_accessibility %>%
filter(budget == 32)
guessed_words = guessed_words %>%
mutate(number = length(intersect(which(guess_acc$clue == clue), which(guess_acc$word == word))))
intersect(which(guess_acc$clue == "multiplication"), which(guess_acc$word == "accounting"))
length(intersect(which(guess_acc$clue == "multiplication"), which(guess_acc$word == "accounting")))
guess_acc = guess_accessibility %>%
filter(budget == 32)
guessed_words = guessed_words %>%
mutate(number = intersect(which(guess_acc$clue == clue), which(guess_acc$word == word)))
length(intersect(which(guess_acc$clue == "multiplication"), which(guess_acc$word == "accounting")))
sona_data = read_csv("connector-ap-sona.csv")
other_data = read_csv("connector-ap.csv")
other_data = other_data %>%
mutate(sona_id = NA) %>%
relocate(sona_id, .before = rt)
View(other_data)
View(sona_data)
problems(other_data)
sona_data = read_csv("connector-ap-sona.csv")
other_data = read_csv("connector-ap.csv")
other_data = other_data %>%
mutate(sona_id = NA) %>%
relocate(sona_id, .before = rt)
data = bind_rows(sona_data, other_data)
sona_data = read_csv("connector-ap-sona.csv")
other_data = read_csv("connector-ap.csv")
other_data = other_data %>%
mutate(sona_id = "") %>%
relocate(sona_id, .before = rt)
data = bind_rows(sona_data, other_data)
sona_data = read_csv("connector-ap-sona.csv")
other_data = read_csv("connector-ap.csv")
other_data = other_data %>%
mutate(sona_id = "a") %>%
relocate(sona_id, .before = rt)
data = bind_rows(sona_data, other_data)
sona_data = read_csv("connector-ap-sona.csv")
other_data = read_csv("connector-ap.csv")
other_data = other_data %>%
mutate(sona_id = 1) %>%
relocate(sona_id, .before = rt)
data = bind_rows(sona_data, other_data)
sona_data = read_csv("connector-ap-sona.csv") %>%
select(!(id))
sona_data = read_csv("connector-ap-sona.csv") %>%
select(!(id))
other_data = read_csv("connector-ap.csv") %>%
select(!(id))
other_data = other_data %>%
mutate(sona_id = 1) %>%
relocate(sona_id, .before = rt)
data = bind_rows(sona_data, other_data)
install.packages("data.table")
install.packages("data.table")
library(data.table)
sona_data = read_csv("connector-ap-sona.csv")
other_data = read_csv("connector-ap.csv")
other_data = other_data %>%
mutate(sona_id = 1) %>%
relocate(sona_id, .before = rt)
rbindlist(list(sona_data, other_data))
sona_data = read_csv("connector-ap-sona.csv")
other_data = read_csv("connector-ap.csv")
other_data = other_data %>%
mutate(sona_id = 1) %>%
relocate(sona_id, .before = rt)
data1 = rbindlist(list(sona_data, other_data))
View(data1)
sona_data = read_csv("connector-ap-sona.csv")
other_data = read_csv("connector-ap.csv")
other_data = other_data %>%
mutate(sona_id = 1) %>%
relocate(sona_id, .before = rt)
data = rbindlist(list(sona_data, other_data))
nrow(data)
ncol(data)
data %>%
group_by(subject) %>%
count()
data %>%
group_by(clue_type) %>%
count()
data %>%
group_by(subject, clue_type) %>%
count()
trials = data %>%
filter(type_of_trial == "experiment" | is_seen == 1)
nrow(trials)
ncol(trials)
trials %>%
group_by(subject) %>%
count()
trials %>%
group_by(clue_type) %>%
count()
trials %>%
group_by(subject, clue_type) %>%
count()
incorrect_attentions = trials %>%
mutate(adjusted_attention = ifelse(is_seen == 1, ifelse(stringdist(tolower(response), clue, method = "lv") < 2, 1, 0), 2)) %>%
filter(adjusted_attention == 0)
incorrect_attentions
incorrect_attentions = incorrect_attentions %>%
group_by(subject) %>%
count()
trials = trials %>%
filter(!(subject %in% incorrect_attentions$subject))
trials_by_subject = trials %>%
group_by(subject) %>%
count()
insufficient_trials = trials_by_subject %>%
filter(n < 66)
trials = trials %>%
filter(!(subject %in% insufficient_trials$subject)) %>%
filter(type_of_trial == "experiment")
trials %>%
group_by(subject) %>%
count()
trials = trials %>%
mutate(scaled_pragmatics = 1000000*pragmatics)
trials = trials %>%
mutate(accessibility_categorical = ifelse(accessibility < mean(accessibility), "Low", "High"))
trials %>%
ggplot(aes(x = scaled_pragmatics, y = accuracy, group = accessibility_categorical, color = accessibility_categorical)) +
geom_smooth(method = "lm") +
theme_few()
glmer1 = glmer(data = trials, accuracy ~ scaled_pragmatics*accessibility + (1|subject) + (1|words), family = "binomial")
summary(glmer1)
car::Anova(glmer1)
x = trials %>%
separate(response, into = c("guess1", "guess2"), sep = ",") %>%
mutate(guess1 = gsub("[^a-zA-Z]", "", guess1)) %>%
mutate(guess1 = tolower(guess1)) %>%
mutate(guess2 = gsub("[^a-zA-Z]", "", guess2)) %>%
mutate(guess2 = tolower(guess2))
#left_join(visit_counts)
x_1 = x %>%
group_by(guess1, clue) %>%
count()
x_2 = x %>%
group_by(guess2,clue) %>%
count()
guessed_words = bind_rows(x_1, x_2) %>%
mutate(word = ifelse(!(is.na(guess1)), guess1, guess2)) %>%
group_by(word, clue) %>%
summarise(n = sum(n))
y = trials %>%
group_by(clue) %>%
count()
guessed_words = guessed_words %>%
mutate(probability = n/y$n[match(clue, y$clue)])
guess_accessibility = read_csv("guess_visit_counts.csv")
guess_acc = guess_accessibility %>%
filter(budget == 32)
guessed_words = guessed_words %>%
mutate(number = intersect(which(guess_acc$clue == clue), which(guess_acc$word == word)))
